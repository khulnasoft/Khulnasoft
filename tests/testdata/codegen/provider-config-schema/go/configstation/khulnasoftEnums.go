// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configstation

import (
	"context"
	"reflect"

	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoft"
)

type Color string

const (
	ColorBlue = Color("blue")
	ColorRed  = Color("red")
)

func (Color) ElementType() reflect.Type {
	return reflect.TypeOf((*Color)(nil)).Elem()
}

func (e Color) ToColorOutput() ColorOutput {
	return khulnasoft.ToOutput(e).(ColorOutput)
}

func (e Color) ToColorOutputWithContext(ctx context.Context) ColorOutput {
	return khulnasoft.ToOutputWithContext(ctx, e).(ColorOutput)
}

func (e Color) ToColorPtrOutput() ColorPtrOutput {
	return e.ToColorPtrOutputWithContext(context.Background())
}

func (e Color) ToColorPtrOutputWithContext(ctx context.Context) ColorPtrOutput {
	return Color(e).ToColorOutputWithContext(ctx).ToColorPtrOutputWithContext(ctx)
}

func (e Color) ToStringOutput() khulnasoft.StringOutput {
	return khulnasoft.ToOutput(khulnasoft.String(e)).(khulnasoft.StringOutput)
}

func (e Color) ToStringOutputWithContext(ctx context.Context) khulnasoft.StringOutput {
	return khulnasoft.ToOutputWithContext(ctx, khulnasoft.String(e)).(khulnasoft.StringOutput)
}

func (e Color) ToStringPtrOutput() khulnasoft.StringPtrOutput {
	return khulnasoft.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Color) ToStringPtrOutputWithContext(ctx context.Context) khulnasoft.StringPtrOutput {
	return khulnasoft.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ColorOutput struct{ *khulnasoft.OutputState }

func (ColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Color)(nil)).Elem()
}

func (o ColorOutput) ToColorOutput() ColorOutput {
	return o
}

func (o ColorOutput) ToColorOutputWithContext(ctx context.Context) ColorOutput {
	return o
}

func (o ColorOutput) ToColorPtrOutput() ColorPtrOutput {
	return o.ToColorPtrOutputWithContext(context.Background())
}

func (o ColorOutput) ToColorPtrOutputWithContext(ctx context.Context) ColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Color) *Color {
		return &v
	}).(ColorPtrOutput)
}

func (o ColorOutput) ToStringOutput() khulnasoft.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ColorOutput) ToStringOutputWithContext(ctx context.Context) khulnasoft.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Color) string {
		return string(e)
	}).(khulnasoft.StringOutput)
}

func (o ColorOutput) ToStringPtrOutput() khulnasoft.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ColorOutput) ToStringPtrOutputWithContext(ctx context.Context) khulnasoft.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Color) *string {
		v := string(e)
		return &v
	}).(khulnasoft.StringPtrOutput)
}

type ColorPtrOutput struct{ *khulnasoft.OutputState }

func (ColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Color)(nil)).Elem()
}

func (o ColorPtrOutput) ToColorPtrOutput() ColorPtrOutput {
	return o
}

func (o ColorPtrOutput) ToColorPtrOutputWithContext(ctx context.Context) ColorPtrOutput {
	return o
}

func (o ColorPtrOutput) Elem() ColorOutput {
	return o.ApplyT(func(v *Color) Color {
		if v != nil {
			return *v
		}
		var ret Color
		return ret
	}).(ColorOutput)
}

func (o ColorPtrOutput) ToStringPtrOutput() khulnasoft.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ColorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) khulnasoft.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Color) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(khulnasoft.StringPtrOutput)
}

// ColorInput is an input type that accepts values of the Color enum
// A concrete instance of `ColorInput` can be one of the following:
//
//	ColorBlue
//	ColorRed
type ColorInput interface {
	khulnasoft.Input

	ToColorOutput() ColorOutput
	ToColorOutputWithContext(context.Context) ColorOutput
}

var colorPtrType = reflect.TypeOf((**Color)(nil)).Elem()

type ColorPtrInput interface {
	khulnasoft.Input

	ToColorPtrOutput() ColorPtrOutput
	ToColorPtrOutputWithContext(context.Context) ColorPtrOutput
}

type colorPtr string

func ColorPtr(v string) ColorPtrInput {
	return (*colorPtr)(&v)
}

func (*colorPtr) ElementType() reflect.Type {
	return colorPtrType
}

func (in *colorPtr) ToColorPtrOutput() ColorPtrOutput {
	return khulnasoft.ToOutput(in).(ColorPtrOutput)
}

func (in *colorPtr) ToColorPtrOutputWithContext(ctx context.Context) ColorPtrOutput {
	return khulnasoft.ToOutputWithContext(ctx, in).(ColorPtrOutput)
}

func init() {
	khulnasoft.RegisterInputType(reflect.TypeOf((*ColorInput)(nil)).Elem(), Color("blue"))
	khulnasoft.RegisterInputType(reflect.TypeOf((*ColorPtrInput)(nil)).Elem(), Color("blue"))
	khulnasoft.RegisterOutputType(ColorOutput{})
	khulnasoft.RegisterOutputType(ColorPtrOutput{})
}
