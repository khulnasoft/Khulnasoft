// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as khulnasoft from "@khulnasoft/khulnasoft";
import * as utilities from "./utilities";

export class Foo extends khulnasoft.ComponentResource {
    /** @internal */
    public static readonly __khulnasoftType = 'example::Foo';

    /**
     * Returns true if the given object is an instance of Foo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Foo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__khulnasoftType'] === Foo.__khulnasoftType;
    }


    /**
     * Create a Foo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FooArgs, opts?: khulnasoft.ComponentResourceOptions) {
        let resourceInputs: khulnasoft.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
        } else {
        }
        opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Foo.__khulnasoftType, name, resourceInputs, opts, true /*remote*/);
    }

    getKubeconfig(args?: Foo.GetKubeconfigArgs): khulnasoft.Output<string> {
        args = args || {};
        const result: khulnasoft.Output<Foo.GetKubeconfigResult> = khulnasoft.runtime.call("example::Foo/getKubeconfig", {
            "__self__": this,
            "profileName": args.profileName,
            "roleArn": args.roleArn,
        }, this);
        return result.kubeconfig;
    }
}

/**
 * The set of arguments for constructing a Foo resource.
 */
export interface FooArgs {
}

export namespace Foo {
    /**
     * The set of arguments for the Foo.getKubeconfig method.
     */
    export interface GetKubeconfigArgs {
        profileName?: khulnasoft.Input<string>;
        roleArn?: khulnasoft.Input<string>;
    }

    /**
     * The results of the Foo.getKubeconfig method.
     */
    export interface GetKubeconfigResult {
        readonly kubeconfig: string;
    }

}
