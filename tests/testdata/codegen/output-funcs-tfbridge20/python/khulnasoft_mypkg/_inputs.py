# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import khulnasoft
import khulnasoft.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetAmiIdsFilterArgs',
    'GetAmiIdsFilterArgsDict',
]

MYPY = False

if not MYPY:
    class GetAmiIdsFilterArgsDict(TypedDict):
        name: str
        values: Sequence[str]
elif False:
    GetAmiIdsFilterArgsDict: TypeAlias = Mapping[str, Any]

@khulnasoft.input_type
class GetAmiIdsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        khulnasoft.set(__self__, "name", name)
        khulnasoft.set(__self__, "values", values)

    @property
    @khulnasoft.getter
    def name(self) -> str:
        return khulnasoft.get(self, "name")

    @name.setter
    def name(self, value: str):
        khulnasoft.set(self, "name", value)

    @property
    @khulnasoft.getter
    def values(self) -> Sequence[str]:
        return khulnasoft.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        khulnasoft.set(self, "values", value)


