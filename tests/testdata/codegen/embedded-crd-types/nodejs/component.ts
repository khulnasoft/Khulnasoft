// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as khulnasoft from "@khulnasoft/khulnasoft";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

import * as khulnasoftKubernetes from "@khulnasoft/kubernetes";

export class Component extends khulnasoft.ComponentResource {
    /** @internal */
    public static readonly __khulnasoftType = 'foo:index:Component';

    /**
     * Returns true if the given object is an instance of Component.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Component {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__khulnasoftType'] === Component.__khulnasoftType;
    }

    public readonly eniConfig!: khulnasoft.Output<{[key: string]: outputs.crd.k8s.amazonaws.com.v1alpha1.ENIConfigSpec} | undefined>;
    public readonly pod!: khulnasoft.Output<khulnasoftKubernetes.types.output.core.v1.Pod | undefined>;

    /**
     * Create a Component resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComponentArgs, opts?: khulnasoft.ComponentResourceOptions) {
        let resourceInputs: khulnasoft.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["eniConfig"] = args ? args.eniConfig : undefined;
            resourceInputs["pod"] = args ? args.pod : undefined;
        } else {
            resourceInputs["eniConfig"] = undefined /*out*/;
            resourceInputs["pod"] = undefined /*out*/;
        }
        opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Component.__khulnasoftType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Component resource.
 */
export interface ComponentArgs {
    eniConfig?: khulnasoft.Input<{[key: string]: khulnasoft.Input<inputs.crd.k8s.amazonaws.com.v1alpha1.ENIConfigSpecArgs>}>;
    pod?: khulnasoft.Input<khulnasoftKubernetes.types.input.core.v1.Pod>;
}
