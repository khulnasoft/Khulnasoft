// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as khulnasoft from "@khulnasoft/khulnasoft";
import * as utilities from "./utilities";

/**
 * Check codegen of functions with a List parameter.
 */
export function funcWithListParam(args?: FuncWithListParamArgs, opts?: khulnasoft.InvokeOptions): Promise<FuncWithListParamResult> {
    args = args || {};
    opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return khulnasoft.runtime.invoke("mypkg::funcWithListParam", {
        "a": args.a,
        "b": args.b,
    }, opts);
}

export interface FuncWithListParamArgs {
    a?: string[];
    b?: string;
}

export interface FuncWithListParamResult {
    readonly r: string;
}
/**
 * Check codegen of functions with a List parameter.
 */
export function funcWithListParamOutput(args?: FuncWithListParamOutputArgs, opts?: khulnasoft.InvokeOptions): khulnasoft.Output<FuncWithListParamResult> {
    args = args || {};
    opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return khulnasoft.runtime.invokeOutput("mypkg::funcWithListParam", {
        "a": args.a,
        "b": args.b,
    }, opts);
}

export interface FuncWithListParamOutputArgs {
    a?: khulnasoft.Input<khulnasoft.Input<string>[]>;
    b?: khulnasoft.Input<string>;
}
