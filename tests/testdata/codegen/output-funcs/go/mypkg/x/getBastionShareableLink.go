// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mypkg

import (
	"context"
	"reflect"

	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoft"
	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoftx"
	"output-funcs/mypkg/internal"
)

// Response for all the Bastion Shareable Link endpoints.
// API Version: 2020-11-01.
func GetBastionShareableLink(ctx *khulnasoft.Context, args *GetBastionShareableLinkArgs, opts ...khulnasoft.InvokeOption) (*GetBastionShareableLinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBastionShareableLinkResult
	err := ctx.Invoke("mypkg::getBastionShareableLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetBastionShareableLinkArgs struct {
	// The name of the Bastion Host.
	BastionHostName string `khulnasoft:"bastionHostName"`
	// The name of the resource group.
	ResourceGroupName string `khulnasoft:"resourceGroupName"`
	// List of VM references.
	Vms []BastionShareableLink `khulnasoft:"vms"`
}

// Response for all the Bastion Shareable Link endpoints.
type GetBastionShareableLinkResult struct {
	// The URL to get the next set of results.
	NextLink *string `khulnasoft:"nextLink"`
}

func GetBastionShareableLinkOutput(ctx *khulnasoft.Context, args GetBastionShareableLinkOutputArgs, opts ...khulnasoft.InvokeOption) GetBastionShareableLinkResultOutput {
	outputResult := khulnasoftx.ApplyErr[*GetBastionShareableLinkArgs](args.ToOutput(), func(plainArgs *GetBastionShareableLinkArgs) (*GetBastionShareableLinkResult, error) {
		return GetBastionShareableLink(ctx, plainArgs, opts...)
	})

	return khulnasoftx.Cast[GetBastionShareableLinkResultOutput, *GetBastionShareableLinkResult](outputResult)
}

type GetBastionShareableLinkOutputArgs struct {
	// The name of the Bastion Host.
	BastionHostName khulnasoftx.Input[string] `khulnasoft:"bastionHostName"`
	// The name of the resource group.
	ResourceGroupName khulnasoftx.Input[string] `khulnasoft:"resourceGroupName"`
	// List of VM references.
	Vms khulnasoftx.Input[[]*BastionShareableLinkArgs] `khulnasoft:"vms"`
}

func (args GetBastionShareableLinkOutputArgs) ToOutput() khulnasoftx.Output[*GetBastionShareableLinkArgs] {
	allArgs := khulnasoftx.All(
		args.BastionHostName.ToOutput(context.Background()).AsAny(),
		args.ResourceGroupName.ToOutput(context.Background()).AsAny(),
		args.Vms.ToOutput(context.Background()).AsAny())
	return khulnasoftx.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetBastionShareableLinkArgs {
		return &GetBastionShareableLinkArgs{
			BastionHostName:   resolvedArgs[0].(string),
			ResourceGroupName: resolvedArgs[1].(string),
			Vms:               resolvedArgs[2].([]BastionShareableLink),
		}
	})
}

type GetBastionShareableLinkResultOutput struct{ *khulnasoft.OutputState }

func (GetBastionShareableLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBastionShareableLinkResult)(nil)).Elem()
}

func (o GetBastionShareableLinkResultOutput) ToOutput(context.Context) khulnasoftx.Output[*GetBastionShareableLinkResult] {
	return khulnasoftx.Output[*GetBastionShareableLinkResult]{
		OutputState: o.OutputState,
	}
}

func (o GetBastionShareableLinkResultOutput) NextLink() khulnasoftx.Output[*string] {
	return khulnasoftx.Apply[*GetBastionShareableLinkResult](o, func(v *GetBastionShareableLinkResult) *string { return v.NextLink })
}
