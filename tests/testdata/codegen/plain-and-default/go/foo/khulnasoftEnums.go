// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foo

import (
	"context"
	"reflect"

	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoft"
	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoftx"
)

type EnumThing int

const (
	EnumThingFour  = EnumThing(4)
	EnumThingSix   = EnumThing(6)
	EnumThingEight = EnumThing(8)
)

func (EnumThing) ElementType() reflect.Type {
	return reflect.TypeOf((*EnumThing)(nil)).Elem()
}

func (e EnumThing) ToEnumThingOutput() EnumThingOutput {
	return khulnasoft.ToOutput(e).(EnumThingOutput)
}

func (e EnumThing) ToEnumThingOutputWithContext(ctx context.Context) EnumThingOutput {
	return khulnasoft.ToOutputWithContext(ctx, e).(EnumThingOutput)
}

func (e EnumThing) ToEnumThingPtrOutput() EnumThingPtrOutput {
	return e.ToEnumThingPtrOutputWithContext(context.Background())
}

func (e EnumThing) ToEnumThingPtrOutputWithContext(ctx context.Context) EnumThingPtrOutput {
	return EnumThing(e).ToEnumThingOutputWithContext(ctx).ToEnumThingPtrOutputWithContext(ctx)
}

func (e EnumThing) ToIntOutput() khulnasoft.IntOutput {
	return khulnasoft.ToOutput(khulnasoft.Int(e)).(khulnasoft.IntOutput)
}

func (e EnumThing) ToIntOutputWithContext(ctx context.Context) khulnasoft.IntOutput {
	return khulnasoft.ToOutputWithContext(ctx, khulnasoft.Int(e)).(khulnasoft.IntOutput)
}

func (e EnumThing) ToIntPtrOutput() khulnasoft.IntPtrOutput {
	return khulnasoft.Int(e).ToIntPtrOutputWithContext(context.Background())
}

func (e EnumThing) ToIntPtrOutputWithContext(ctx context.Context) khulnasoft.IntPtrOutput {
	return khulnasoft.Int(e).ToIntOutputWithContext(ctx).ToIntPtrOutputWithContext(ctx)
}

type EnumThingOutput struct{ *khulnasoft.OutputState }

func (EnumThingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnumThing)(nil)).Elem()
}

func (o EnumThingOutput) ToEnumThingOutput() EnumThingOutput {
	return o
}

func (o EnumThingOutput) ToEnumThingOutputWithContext(ctx context.Context) EnumThingOutput {
	return o
}

func (o EnumThingOutput) ToEnumThingPtrOutput() EnumThingPtrOutput {
	return o.ToEnumThingPtrOutputWithContext(context.Background())
}

func (o EnumThingOutput) ToEnumThingPtrOutputWithContext(ctx context.Context) EnumThingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnumThing) *EnumThing {
		return &v
	}).(EnumThingPtrOutput)
}

func (o EnumThingOutput) ToOutput(ctx context.Context) khulnasoftx.Output[EnumThing] {
	return khulnasoftx.Output[EnumThing]{
		OutputState: o.OutputState,
	}
}

func (o EnumThingOutput) ToIntOutput() khulnasoft.IntOutput {
	return o.ToIntOutputWithContext(context.Background())
}

func (o EnumThingOutput) ToIntOutputWithContext(ctx context.Context) khulnasoft.IntOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnumThing) int {
		return int(e)
	}).(khulnasoft.IntOutput)
}

func (o EnumThingOutput) ToIntPtrOutput() khulnasoft.IntPtrOutput {
	return o.ToIntPtrOutputWithContext(context.Background())
}

func (o EnumThingOutput) ToIntPtrOutputWithContext(ctx context.Context) khulnasoft.IntPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnumThing) *int {
		v := int(e)
		return &v
	}).(khulnasoft.IntPtrOutput)
}

type EnumThingPtrOutput struct{ *khulnasoft.OutputState }

func (EnumThingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnumThing)(nil)).Elem()
}

func (o EnumThingPtrOutput) ToEnumThingPtrOutput() EnumThingPtrOutput {
	return o
}

func (o EnumThingPtrOutput) ToEnumThingPtrOutputWithContext(ctx context.Context) EnumThingPtrOutput {
	return o
}

func (o EnumThingPtrOutput) ToOutput(ctx context.Context) khulnasoftx.Output[*EnumThing] {
	return khulnasoftx.Output[*EnumThing]{
		OutputState: o.OutputState,
	}
}

func (o EnumThingPtrOutput) Elem() EnumThingOutput {
	return o.ApplyT(func(v *EnumThing) EnumThing {
		if v != nil {
			return *v
		}
		var ret EnumThing
		return ret
	}).(EnumThingOutput)
}

func (o EnumThingPtrOutput) ToIntPtrOutput() khulnasoft.IntPtrOutput {
	return o.ToIntPtrOutputWithContext(context.Background())
}

func (o EnumThingPtrOutput) ToIntPtrOutputWithContext(ctx context.Context) khulnasoft.IntPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnumThing) *int {
		if e == nil {
			return nil
		}
		v := int(*e)
		return &v
	}).(khulnasoft.IntPtrOutput)
}

// EnumThingInput is an input type that accepts values of the EnumThing enum
// A concrete instance of `EnumThingInput` can be one of the following:
//
//	EnumThingFour
//	EnumThingSix
//	EnumThingEight
type EnumThingInput interface {
	khulnasoft.Input

	ToEnumThingOutput() EnumThingOutput
	ToEnumThingOutputWithContext(context.Context) EnumThingOutput
}

var enumThingPtrType = reflect.TypeOf((**EnumThing)(nil)).Elem()

type EnumThingPtrInput interface {
	khulnasoft.Input

	ToEnumThingPtrOutput() EnumThingPtrOutput
	ToEnumThingPtrOutputWithContext(context.Context) EnumThingPtrOutput
}

type enumThingPtr int

func EnumThingPtr(v int) EnumThingPtrInput {
	return (*enumThingPtr)(&v)
}

func (*enumThingPtr) ElementType() reflect.Type {
	return enumThingPtrType
}

func (in *enumThingPtr) ToEnumThingPtrOutput() EnumThingPtrOutput {
	return khulnasoft.ToOutput(in).(EnumThingPtrOutput)
}

func (in *enumThingPtr) ToEnumThingPtrOutputWithContext(ctx context.Context) EnumThingPtrOutput {
	return khulnasoft.ToOutputWithContext(ctx, in).(EnumThingPtrOutput)
}

func (in *enumThingPtr) ToOutput(ctx context.Context) khulnasoftx.Output[*EnumThing] {
	return khulnasoftx.Output[*EnumThing]{
		OutputState: in.ToEnumThingPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	khulnasoft.RegisterInputType(reflect.TypeOf((*EnumThingInput)(nil)).Elem(), EnumThing(4))
	khulnasoft.RegisterInputType(reflect.TypeOf((*EnumThingPtrInput)(nil)).Elem(), EnumThing(4))
	khulnasoft.RegisterOutputType(EnumThingOutput{})
	khulnasoft.RegisterOutputType(EnumThingPtrOutput{})
}
