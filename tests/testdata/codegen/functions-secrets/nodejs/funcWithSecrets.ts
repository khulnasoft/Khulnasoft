// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as khulnasoft from "@khulnasoft/khulnasoft";
import * as utilities from "./utilities";

export function funcWithSecrets(args: FuncWithSecretsArgs, opts?: khulnasoft.InvokeOptions): Promise<FuncWithSecretsResult> {
    opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return khulnasoft.runtime.invoke("mypkg::funcWithSecrets", {
        "cryptoKey": args.cryptoKey,
        "plaintext": args.plaintext,
    }, opts);
}

export interface FuncWithSecretsArgs {
    cryptoKey: string;
    plaintext: string;
}

export interface FuncWithSecretsResult {
    readonly ciphertext: string;
    readonly cryptoKey: string;
    readonly id: string;
    readonly plaintext: string;
}
export function funcWithSecretsOutput(args: FuncWithSecretsOutputArgs, opts?: khulnasoft.InvokeOptions): khulnasoft.Output<FuncWithSecretsResult> {
    opts = khulnasoft.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return khulnasoft.runtime.invokeOutput("mypkg::funcWithSecrets", {
        "cryptoKey": args.cryptoKey,
        "plaintext": args.plaintext,
    }, opts);
}

export interface FuncWithSecretsOutputArgs {
    cryptoKey: khulnasoft.Input<string>;
    plaintext: khulnasoft.Input<string>;
}
