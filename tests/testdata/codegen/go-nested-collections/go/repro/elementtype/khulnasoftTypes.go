// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elementtype

import (
	"context"
	"reflect"

	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoft"
	"go-nested-collections/repro/internal"
)

var _ = internal.GetEnvOrDefault

type ElementTypeType struct {
	ElementType_ *string `khulnasoft:"elementType"`
}

type ElementTypeTypeOutput struct{ *khulnasoft.OutputState }

func (ElementTypeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElementTypeType)(nil)).Elem()
}

func (o ElementTypeTypeOutput) ToElementTypeTypeOutput() ElementTypeTypeOutput {
	return o
}

func (o ElementTypeTypeOutput) ToElementTypeTypeOutputWithContext(ctx context.Context) ElementTypeTypeOutput {
	return o
}

func (o ElementTypeTypeOutput) GetElementType_() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v ElementTypeType) *string { return v.ElementType_ }).(khulnasoft.StringPtrOutput)
}

type ElementTypeTypePtrOutput struct{ *khulnasoft.OutputState }

func (ElementTypeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElementTypeType)(nil)).Elem()
}

func (o ElementTypeTypePtrOutput) ToElementTypeTypePtrOutput() ElementTypeTypePtrOutput {
	return o
}

func (o ElementTypeTypePtrOutput) ToElementTypeTypePtrOutputWithContext(ctx context.Context) ElementTypeTypePtrOutput {
	return o
}

func (o ElementTypeTypePtrOutput) Elem() ElementTypeTypeOutput {
	return o.ApplyT(func(v *ElementTypeType) ElementTypeType {
		if v != nil {
			return *v
		}
		var ret ElementTypeType
		return ret
	}).(ElementTypeTypeOutput)
}

func (o ElementTypeTypePtrOutput) ElementTypeProp() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *ElementTypeType) *string {
		if v == nil {
			return nil
		}
		return v.ElementType_
	}).(khulnasoft.StringPtrOutput)
}

func init() {
	khulnasoft.RegisterOutputType(ElementTypeTypeOutput{})
	khulnasoft.RegisterOutputType(ElementTypeTypePtrOutput{})
}
