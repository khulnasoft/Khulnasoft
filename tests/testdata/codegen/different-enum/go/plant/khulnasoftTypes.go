// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package plant

import (
	"context"
	"reflect"

	"different-enum/plant/internal"
	"github.com/khulnasoft/khulnasoft/sdk/v3/go/khulnasoft"
)

var _ = internal.GetEnvOrDefault

type Container struct {
	Brightness *ContainerBrightness `khulnasoft:"brightness"`
	Color      *string              `khulnasoft:"color"`
	Material   *string              `khulnasoft:"material"`
	Size       ContainerSize        `khulnasoft:"size"`
}

// Defaults sets the appropriate defaults for Container
func (val *Container) Defaults() *Container {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Brightness == nil {
		brightness_ := ContainerBrightness(1.0)
		tmp.Brightness = &brightness_
	}
	return &tmp
}

// ContainerInput is an input type that accepts ContainerArgs and ContainerOutput values.
// You can construct a concrete instance of `ContainerInput` via:
//
//	ContainerArgs{...}
type ContainerInput interface {
	khulnasoft.Input

	ToContainerOutput() ContainerOutput
	ToContainerOutputWithContext(context.Context) ContainerOutput
}

type ContainerArgs struct {
	Brightness ContainerBrightnessPtrInput `khulnasoft:"brightness"`
	Color      khulnasoft.StringPtrInput       `khulnasoft:"color"`
	Material   khulnasoft.StringPtrInput       `khulnasoft:"material"`
	Size       ContainerSizeInput          `khulnasoft:"size"`
}

// Defaults sets the appropriate defaults for ContainerArgs
func (val *ContainerArgs) Defaults() *ContainerArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Brightness == nil {
		tmp.Brightness = ContainerBrightness(1.0)
	}
	return &tmp
}
func (ContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (i ContainerArgs) ToContainerOutput() ContainerOutput {
	return i.ToContainerOutputWithContext(context.Background())
}

func (i ContainerArgs) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return khulnasoft.ToOutputWithContext(ctx, i).(ContainerOutput)
}

func (i ContainerArgs) ToContainerPtrOutput() ContainerPtrOutput {
	return i.ToContainerPtrOutputWithContext(context.Background())
}

func (i ContainerArgs) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return khulnasoft.ToOutputWithContext(ctx, i).(ContainerOutput).ToContainerPtrOutputWithContext(ctx)
}

// ContainerPtrInput is an input type that accepts ContainerArgs, ContainerPtr and ContainerPtrOutput values.
// You can construct a concrete instance of `ContainerPtrInput` via:
//
//	        ContainerArgs{...}
//
//	or:
//
//	        nil
type ContainerPtrInput interface {
	khulnasoft.Input

	ToContainerPtrOutput() ContainerPtrOutput
	ToContainerPtrOutputWithContext(context.Context) ContainerPtrOutput
}

type containerPtrType ContainerArgs

func ContainerPtr(v *ContainerArgs) ContainerPtrInput {
	return (*containerPtrType)(v)
}

func (*containerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Container)(nil)).Elem()
}

func (i *containerPtrType) ToContainerPtrOutput() ContainerPtrOutput {
	return i.ToContainerPtrOutputWithContext(context.Background())
}

func (i *containerPtrType) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return khulnasoft.ToOutputWithContext(ctx, i).(ContainerPtrOutput)
}

type ContainerOutput struct{ *khulnasoft.OutputState }

func (ContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (o ContainerOutput) ToContainerOutput() ContainerOutput {
	return o
}

func (o ContainerOutput) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return o
}

func (o ContainerOutput) ToContainerPtrOutput() ContainerPtrOutput {
	return o.ToContainerPtrOutputWithContext(context.Background())
}

func (o ContainerOutput) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Container) *Container {
		return &v
	}).(ContainerPtrOutput)
}

func (o ContainerOutput) Brightness() ContainerBrightnessPtrOutput {
	return o.ApplyT(func(v Container) *ContainerBrightness { return v.Brightness }).(ContainerBrightnessPtrOutput)
}

func (o ContainerOutput) Color() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v Container) *string { return v.Color }).(khulnasoft.StringPtrOutput)
}

func (o ContainerOutput) Material() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v Container) *string { return v.Material }).(khulnasoft.StringPtrOutput)
}

func (o ContainerOutput) Size() ContainerSizeOutput {
	return o.ApplyT(func(v Container) ContainerSize { return v.Size }).(ContainerSizeOutput)
}

type ContainerPtrOutput struct{ *khulnasoft.OutputState }

func (ContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Container)(nil)).Elem()
}

func (o ContainerPtrOutput) ToContainerPtrOutput() ContainerPtrOutput {
	return o
}

func (o ContainerPtrOutput) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return o
}

func (o ContainerPtrOutput) Elem() ContainerOutput {
	return o.ApplyT(func(v *Container) Container {
		if v != nil {
			return *v
		}
		var ret Container
		return ret
	}).(ContainerOutput)
}

func (o ContainerPtrOutput) Brightness() ContainerBrightnessPtrOutput {
	return o.ApplyT(func(v *Container) *ContainerBrightness {
		if v == nil {
			return nil
		}
		return v.Brightness
	}).(ContainerBrightnessPtrOutput)
}

func (o ContainerPtrOutput) Color() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Container) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(khulnasoft.StringPtrOutput)
}

func (o ContainerPtrOutput) Material() khulnasoft.StringPtrOutput {
	return o.ApplyT(func(v *Container) *string {
		if v == nil {
			return nil
		}
		return v.Material
	}).(khulnasoft.StringPtrOutput)
}

func (o ContainerPtrOutput) Size() ContainerSizePtrOutput {
	return o.ApplyT(func(v *Container) *ContainerSize {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(ContainerSizePtrOutput)
}

func init() {
	khulnasoft.RegisterInputType(reflect.TypeOf((*ContainerInput)(nil)).Elem(), ContainerArgs{})
	khulnasoft.RegisterInputType(reflect.TypeOf((*ContainerPtrInput)(nil)).Elem(), ContainerArgs{})
	khulnasoft.RegisterOutputType(ContainerOutput{})
	khulnasoft.RegisterOutputType(ContainerPtrOutput{})
}
