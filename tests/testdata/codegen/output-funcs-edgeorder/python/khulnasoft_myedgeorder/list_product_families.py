# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import khulnasoft
import khulnasoft.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = [
    'ListProductFamiliesResult',
    'AwaitableListProductFamiliesResult',
    'list_product_families',
    'list_product_families_output',
]

@khulnasoft.output_type
class ListProductFamiliesResult:
    """
    The list of product families.
    """
    def __init__(__self__, next_link=None, value=None):
        if next_link and not isinstance(next_link, str):
            raise TypeError("Expected argument 'next_link' to be a str")
        khulnasoft.set(__self__, "next_link", next_link)
        if value and not isinstance(value, list):
            raise TypeError("Expected argument 'value' to be a list")
        khulnasoft.set(__self__, "value", value)

    @property
    @khulnasoft.getter(name="nextLink")
    def next_link(self) -> Optional[str]:
        """
        Link for the next set of product families.
        """
        return khulnasoft.get(self, "next_link")

    @property
    @khulnasoft.getter
    def value(self) -> Sequence['outputs.ProductFamilyResponse']:
        """
        List of product families.
        """
        return khulnasoft.get(self, "value")


class AwaitableListProductFamiliesResult(ListProductFamiliesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListProductFamiliesResult(
            next_link=self.next_link,
            value=self.value)


def list_product_families(customer_subscription_details: Optional[khulnasoft.InputType['CustomerSubscriptionDetails']] = None,
                          expand: Optional[str] = None,
                          filterable_properties: Optional[Mapping[str, Sequence[khulnasoft.InputType['FilterableProperty']]]] = None,
                          skip_token: Optional[str] = None,
                          opts: Optional[khulnasoft.InvokeOptions] = None) -> AwaitableListProductFamiliesResult:
    """
    The list of product families.
    API Version: 2020-12-01-preview.


    :param khulnasoft.InputType['CustomerSubscriptionDetails'] customer_subscription_details: Customer subscription properties. Clients can display available products to unregistered customers by explicitly passing subscription details
    :param str expand: $expand is supported on configurations parameter for product, which provides details on the configurations for the product.
    :param Mapping[str, Sequence[khulnasoft.InputType['FilterableProperty']]] filterable_properties: Dictionary of filterable properties on product family.
    :param str skip_token: $skipToken is supported on list of product families, which provides the next page in the list of product families.
    """
    __args__ = dict()
    __args__['customerSubscriptionDetails'] = customer_subscription_details
    __args__['expand'] = expand
    __args__['filterableProperties'] = filterable_properties
    __args__['skipToken'] = skip_token
    opts = khulnasoft.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = khulnasoft.runtime.invoke('myedgeorder::listProductFamilies', __args__, opts=opts, typ=ListProductFamiliesResult).value

    return AwaitableListProductFamiliesResult(
        next_link=khulnasoft.get(__ret__, 'next_link'),
        value=khulnasoft.get(__ret__, 'value'))
def list_product_families_output(customer_subscription_details: Optional[khulnasoft.Input[Optional[khulnasoft.InputType['CustomerSubscriptionDetails']]]] = None,
                                 expand: Optional[khulnasoft.Input[Optional[str]]] = None,
                                 filterable_properties: Optional[khulnasoft.Input[Mapping[str, Sequence[khulnasoft.InputType['FilterableProperty']]]]] = None,
                                 skip_token: Optional[khulnasoft.Input[Optional[str]]] = None,
                                 opts: Optional[khulnasoft.InvokeOptions] = None) -> khulnasoft.Output[ListProductFamiliesResult]:
    """
    The list of product families.
    API Version: 2020-12-01-preview.


    :param khulnasoft.InputType['CustomerSubscriptionDetails'] customer_subscription_details: Customer subscription properties. Clients can display available products to unregistered customers by explicitly passing subscription details
    :param str expand: $expand is supported on configurations parameter for product, which provides details on the configurations for the product.
    :param Mapping[str, Sequence[khulnasoft.InputType['FilterableProperty']]] filterable_properties: Dictionary of filterable properties on product family.
    :param str skip_token: $skipToken is supported on list of product families, which provides the next page in the list of product families.
    """
    __args__ = dict()
    __args__['customerSubscriptionDetails'] = customer_subscription_details
    __args__['expand'] = expand
    __args__['filterableProperties'] = filterable_properties
    __args__['skipToken'] = skip_token
    opts = khulnasoft.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = khulnasoft.runtime.invoke_output('myedgeorder::listProductFamilies', __args__, opts=opts, typ=ListProductFamiliesResult)
    return __ret__.apply(lambda __response__: ListProductFamiliesResult(
        next_link=khulnasoft.get(__response__, 'next_link'),
        value=khulnasoft.get(__response__, 'value')))
